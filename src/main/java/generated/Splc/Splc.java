// Generated from D:/0大学/大学3年级/编译原理/projects/CS323-Compilers-2025F-Projects/Splc.g4 by ANTLR 4.13.2
package generated.Splc;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue", "this-escape"})
public class Splc extends Lexer {
	static { RuntimeMetaData.checkVersion("4.13.2", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		INT=1, CHAR=2, STRUCT=3, RETURN=4, IF=5, ELSE=6, WHILE=7, ASSIGN=8, PLUS=9, 
		MINUS=10, STAR=11, DIV=12, MOD=13, LT=14, LE=15, GT=16, GE=17, EQ=18, 
		NEQ=19, AND=20, OR=21, NOT=22, INC=23, DEC=24, DOT=25, ARROW=26, AMP=27, 
		SEMI=28, COMMA=29, LPAREN=30, RPAREN=31, LBRACE=32, RBRACE=33, LBRACK=34, 
		RBRACK=35, Identifier=36, Number=37, Char=38, WS=39, LINE_COMMENT=40, 
		BLOCK_COMMENT=41;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"INT", "CHAR", "STRUCT", "RETURN", "IF", "ELSE", "WHILE", "ASSIGN", "PLUS", 
			"MINUS", "STAR", "DIV", "MOD", "LT", "LE", "GT", "GE", "EQ", "NEQ", "AND", 
			"OR", "NOT", "INC", "DEC", "DOT", "ARROW", "AMP", "SEMI", "COMMA", "LPAREN", 
			"RPAREN", "LBRACE", "RBRACE", "LBRACK", "RBRACK", "Identifier", "Number", 
			"Char", "EscapeChar", "WS", "LINE_COMMENT", "BLOCK_COMMENT"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "'int'", "'char'", "'struct'", "'return'", "'if'", "'else'", "'while'", 
			"'='", "'+'", "'-'", "'*'", "'/'", "'%'", "'<'", "'<='", "'>'", "'>='", 
			"'=='", "'!='", "'&&'", "'||'", "'!'", "'++'", "'--'", "'.'", "'->'", 
			"'&'", "';'", "','", "'('", "')'", "'{'", "'}'", "'['", "']'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, "INT", "CHAR", "STRUCT", "RETURN", "IF", "ELSE", "WHILE", "ASSIGN", 
			"PLUS", "MINUS", "STAR", "DIV", "MOD", "LT", "LE", "GT", "GE", "EQ", 
			"NEQ", "AND", "OR", "NOT", "INC", "DEC", "DOT", "ARROW", "AMP", "SEMI", 
			"COMMA", "LPAREN", "RPAREN", "LBRACE", "RBRACE", "LBRACK", "RBRACK", 
			"Identifier", "Number", "Char", "WS", "LINE_COMMENT", "BLOCK_COMMENT"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public Splc(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "Splc.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u0000)\u00fd\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002\u0001"+
		"\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002\u0004"+
		"\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002\u0007"+
		"\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002\u000b"+
		"\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e\u0002"+
		"\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011\u0002"+
		"\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0002\u0014\u0007\u0014\u0002"+
		"\u0015\u0007\u0015\u0002\u0016\u0007\u0016\u0002\u0017\u0007\u0017\u0002"+
		"\u0018\u0007\u0018\u0002\u0019\u0007\u0019\u0002\u001a\u0007\u001a\u0002"+
		"\u001b\u0007\u001b\u0002\u001c\u0007\u001c\u0002\u001d\u0007\u001d\u0002"+
		"\u001e\u0007\u001e\u0002\u001f\u0007\u001f\u0002 \u0007 \u0002!\u0007"+
		"!\u0002\"\u0007\"\u0002#\u0007#\u0002$\u0007$\u0002%\u0007%\u0002&\u0007"+
		"&\u0002\'\u0007\'\u0002(\u0007(\u0002)\u0007)\u0001\u0000\u0001\u0000"+
		"\u0001\u0000\u0001\u0000\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001"+
		"\u0001\u0001\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0002"+
		"\u0001\u0002\u0001\u0002\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0003"+
		"\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0004\u0001\u0004\u0001\u0004"+
		"\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0006"+
		"\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0007"+
		"\u0001\u0007\u0001\b\u0001\b\u0001\t\u0001\t\u0001\n\u0001\n\u0001\u000b"+
		"\u0001\u000b\u0001\f\u0001\f\u0001\r\u0001\r\u0001\u000e\u0001\u000e\u0001"+
		"\u000e\u0001\u000f\u0001\u000f\u0001\u0010\u0001\u0010\u0001\u0010\u0001"+
		"\u0011\u0001\u0011\u0001\u0011\u0001\u0012\u0001\u0012\u0001\u0012\u0001"+
		"\u0013\u0001\u0013\u0001\u0013\u0001\u0014\u0001\u0014\u0001\u0014\u0001"+
		"\u0015\u0001\u0015\u0001\u0016\u0001\u0016\u0001\u0016\u0001\u0017\u0001"+
		"\u0017\u0001\u0017\u0001\u0018\u0001\u0018\u0001\u0019\u0001\u0019\u0001"+
		"\u0019\u0001\u001a\u0001\u001a\u0001\u001b\u0001\u001b\u0001\u001c\u0001"+
		"\u001c\u0001\u001d\u0001\u001d\u0001\u001e\u0001\u001e\u0001\u001f\u0001"+
		"\u001f\u0001 \u0001 \u0001!\u0001!\u0001\"\u0001\"\u0001#\u0001#\u0005"+
		"#\u00be\b#\n#\f#\u00c1\t#\u0001$\u0001$\u0001$\u0005$\u00c6\b$\n$\f$\u00c9"+
		"\t$\u0003$\u00cb\b$\u0001%\u0001%\u0001%\u0003%\u00d0\b%\u0001%\u0001"+
		"%\u0001&\u0001&\u0001&\u0001\'\u0004\'\u00d8\b\'\u000b\'\f\'\u00d9\u0001"+
		"\'\u0001\'\u0001(\u0001(\u0001(\u0001(\u0005(\u00e2\b(\n(\f(\u00e5\t("+
		"\u0001(\u0003(\u00e8\b(\u0001(\u0001(\u0003(\u00ec\b(\u0001(\u0001(\u0001"+
		")\u0001)\u0001)\u0001)\u0005)\u00f4\b)\n)\f)\u00f7\t)\u0001)\u0001)\u0001"+
		")\u0001)\u0001)\u0002\u00e3\u00f5\u0000*\u0001\u0001\u0003\u0002\u0005"+
		"\u0003\u0007\u0004\t\u0005\u000b\u0006\r\u0007\u000f\b\u0011\t\u0013\n"+
		"\u0015\u000b\u0017\f\u0019\r\u001b\u000e\u001d\u000f\u001f\u0010!\u0011"+
		"#\u0012%\u0013\'\u0014)\u0015+\u0016-\u0017/\u00181\u00193\u001a5\u001b"+
		"7\u001c9\u001d;\u001e=\u001f? A!C\"E#G$I%K&M\u0000O\'Q(S)\u0001\u0000"+
		"\u0007\u0003\u0000AZ__az\u0004\u000009AZ__az\u0001\u000019\u0001\u0000"+
		"09\u0004\u0000\n\n\r\r\'\'\\\\\u0006\u0000\"\"\'\'\\\\nnrrtt\u0003\u0000"+
		"\t\n\r\r  \u0104\u0000\u0001\u0001\u0000\u0000\u0000\u0000\u0003\u0001"+
		"\u0000\u0000\u0000\u0000\u0005\u0001\u0000\u0000\u0000\u0000\u0007\u0001"+
		"\u0000\u0000\u0000\u0000\t\u0001\u0000\u0000\u0000\u0000\u000b\u0001\u0000"+
		"\u0000\u0000\u0000\r\u0001\u0000\u0000\u0000\u0000\u000f\u0001\u0000\u0000"+
		"\u0000\u0000\u0011\u0001\u0000\u0000\u0000\u0000\u0013\u0001\u0000\u0000"+
		"\u0000\u0000\u0015\u0001\u0000\u0000\u0000\u0000\u0017\u0001\u0000\u0000"+
		"\u0000\u0000\u0019\u0001\u0000\u0000\u0000\u0000\u001b\u0001\u0000\u0000"+
		"\u0000\u0000\u001d\u0001\u0000\u0000\u0000\u0000\u001f\u0001\u0000\u0000"+
		"\u0000\u0000!\u0001\u0000\u0000\u0000\u0000#\u0001\u0000\u0000\u0000\u0000"+
		"%\u0001\u0000\u0000\u0000\u0000\'\u0001\u0000\u0000\u0000\u0000)\u0001"+
		"\u0000\u0000\u0000\u0000+\u0001\u0000\u0000\u0000\u0000-\u0001\u0000\u0000"+
		"\u0000\u0000/\u0001\u0000\u0000\u0000\u00001\u0001\u0000\u0000\u0000\u0000"+
		"3\u0001\u0000\u0000\u0000\u00005\u0001\u0000\u0000\u0000\u00007\u0001"+
		"\u0000\u0000\u0000\u00009\u0001\u0000\u0000\u0000\u0000;\u0001\u0000\u0000"+
		"\u0000\u0000=\u0001\u0000\u0000\u0000\u0000?\u0001\u0000\u0000\u0000\u0000"+
		"A\u0001\u0000\u0000\u0000\u0000C\u0001\u0000\u0000\u0000\u0000E\u0001"+
		"\u0000\u0000\u0000\u0000G\u0001\u0000\u0000\u0000\u0000I\u0001\u0000\u0000"+
		"\u0000\u0000K\u0001\u0000\u0000\u0000\u0000O\u0001\u0000\u0000\u0000\u0000"+
		"Q\u0001\u0000\u0000\u0000\u0000S\u0001\u0000\u0000\u0000\u0001U\u0001"+
		"\u0000\u0000\u0000\u0003Y\u0001\u0000\u0000\u0000\u0005^\u0001\u0000\u0000"+
		"\u0000\u0007e\u0001\u0000\u0000\u0000\tl\u0001\u0000\u0000\u0000\u000b"+
		"o\u0001\u0000\u0000\u0000\rt\u0001\u0000\u0000\u0000\u000fz\u0001\u0000"+
		"\u0000\u0000\u0011|\u0001\u0000\u0000\u0000\u0013~\u0001\u0000\u0000\u0000"+
		"\u0015\u0080\u0001\u0000\u0000\u0000\u0017\u0082\u0001\u0000\u0000\u0000"+
		"\u0019\u0084\u0001\u0000\u0000\u0000\u001b\u0086\u0001\u0000\u0000\u0000"+
		"\u001d\u0088\u0001\u0000\u0000\u0000\u001f\u008b\u0001\u0000\u0000\u0000"+
		"!\u008d\u0001\u0000\u0000\u0000#\u0090\u0001\u0000\u0000\u0000%\u0093"+
		"\u0001\u0000\u0000\u0000\'\u0096\u0001\u0000\u0000\u0000)\u0099\u0001"+
		"\u0000\u0000\u0000+\u009c\u0001\u0000\u0000\u0000-\u009e\u0001\u0000\u0000"+
		"\u0000/\u00a1\u0001\u0000\u0000\u00001\u00a4\u0001\u0000\u0000\u00003"+
		"\u00a6\u0001\u0000\u0000\u00005\u00a9\u0001\u0000\u0000\u00007\u00ab\u0001"+
		"\u0000\u0000\u00009\u00ad\u0001\u0000\u0000\u0000;\u00af\u0001\u0000\u0000"+
		"\u0000=\u00b1\u0001\u0000\u0000\u0000?\u00b3\u0001\u0000\u0000\u0000A"+
		"\u00b5\u0001\u0000\u0000\u0000C\u00b7\u0001\u0000\u0000\u0000E\u00b9\u0001"+
		"\u0000\u0000\u0000G\u00bb\u0001\u0000\u0000\u0000I\u00ca\u0001\u0000\u0000"+
		"\u0000K\u00cc\u0001\u0000\u0000\u0000M\u00d3\u0001\u0000\u0000\u0000O"+
		"\u00d7\u0001\u0000\u0000\u0000Q\u00dd\u0001\u0000\u0000\u0000S\u00ef\u0001"+
		"\u0000\u0000\u0000UV\u0005i\u0000\u0000VW\u0005n\u0000\u0000WX\u0005t"+
		"\u0000\u0000X\u0002\u0001\u0000\u0000\u0000YZ\u0005c\u0000\u0000Z[\u0005"+
		"h\u0000\u0000[\\\u0005a\u0000\u0000\\]\u0005r\u0000\u0000]\u0004\u0001"+
		"\u0000\u0000\u0000^_\u0005s\u0000\u0000_`\u0005t\u0000\u0000`a\u0005r"+
		"\u0000\u0000ab\u0005u\u0000\u0000bc\u0005c\u0000\u0000cd\u0005t\u0000"+
		"\u0000d\u0006\u0001\u0000\u0000\u0000ef\u0005r\u0000\u0000fg\u0005e\u0000"+
		"\u0000gh\u0005t\u0000\u0000hi\u0005u\u0000\u0000ij\u0005r\u0000\u0000"+
		"jk\u0005n\u0000\u0000k\b\u0001\u0000\u0000\u0000lm\u0005i\u0000\u0000"+
		"mn\u0005f\u0000\u0000n\n\u0001\u0000\u0000\u0000op\u0005e\u0000\u0000"+
		"pq\u0005l\u0000\u0000qr\u0005s\u0000\u0000rs\u0005e\u0000\u0000s\f\u0001"+
		"\u0000\u0000\u0000tu\u0005w\u0000\u0000uv\u0005h\u0000\u0000vw\u0005i"+
		"\u0000\u0000wx\u0005l\u0000\u0000xy\u0005e\u0000\u0000y\u000e\u0001\u0000"+
		"\u0000\u0000z{\u0005=\u0000\u0000{\u0010\u0001\u0000\u0000\u0000|}\u0005"+
		"+\u0000\u0000}\u0012\u0001\u0000\u0000\u0000~\u007f\u0005-\u0000\u0000"+
		"\u007f\u0014\u0001\u0000\u0000\u0000\u0080\u0081\u0005*\u0000\u0000\u0081"+
		"\u0016\u0001\u0000\u0000\u0000\u0082\u0083\u0005/\u0000\u0000\u0083\u0018"+
		"\u0001\u0000\u0000\u0000\u0084\u0085\u0005%\u0000\u0000\u0085\u001a\u0001"+
		"\u0000\u0000\u0000\u0086\u0087\u0005<\u0000\u0000\u0087\u001c\u0001\u0000"+
		"\u0000\u0000\u0088\u0089\u0005<\u0000\u0000\u0089\u008a\u0005=\u0000\u0000"+
		"\u008a\u001e\u0001\u0000\u0000\u0000\u008b\u008c\u0005>\u0000\u0000\u008c"+
		" \u0001\u0000\u0000\u0000\u008d\u008e\u0005>\u0000\u0000\u008e\u008f\u0005"+
		"=\u0000\u0000\u008f\"\u0001\u0000\u0000\u0000\u0090\u0091\u0005=\u0000"+
		"\u0000\u0091\u0092\u0005=\u0000\u0000\u0092$\u0001\u0000\u0000\u0000\u0093"+
		"\u0094\u0005!\u0000\u0000\u0094\u0095\u0005=\u0000\u0000\u0095&\u0001"+
		"\u0000\u0000\u0000\u0096\u0097\u0005&\u0000\u0000\u0097\u0098\u0005&\u0000"+
		"\u0000\u0098(\u0001\u0000\u0000\u0000\u0099\u009a\u0005|\u0000\u0000\u009a"+
		"\u009b\u0005|\u0000\u0000\u009b*\u0001\u0000\u0000\u0000\u009c\u009d\u0005"+
		"!\u0000\u0000\u009d,\u0001\u0000\u0000\u0000\u009e\u009f\u0005+\u0000"+
		"\u0000\u009f\u00a0\u0005+\u0000\u0000\u00a0.\u0001\u0000\u0000\u0000\u00a1"+
		"\u00a2\u0005-\u0000\u0000\u00a2\u00a3\u0005-\u0000\u0000\u00a30\u0001"+
		"\u0000\u0000\u0000\u00a4\u00a5\u0005.\u0000\u0000\u00a52\u0001\u0000\u0000"+
		"\u0000\u00a6\u00a7\u0005-\u0000\u0000\u00a7\u00a8\u0005>\u0000\u0000\u00a8"+
		"4\u0001\u0000\u0000\u0000\u00a9\u00aa\u0005&\u0000\u0000\u00aa6\u0001"+
		"\u0000\u0000\u0000\u00ab\u00ac\u0005;\u0000\u0000\u00ac8\u0001\u0000\u0000"+
		"\u0000\u00ad\u00ae\u0005,\u0000\u0000\u00ae:\u0001\u0000\u0000\u0000\u00af"+
		"\u00b0\u0005(\u0000\u0000\u00b0<\u0001\u0000\u0000\u0000\u00b1\u00b2\u0005"+
		")\u0000\u0000\u00b2>\u0001\u0000\u0000\u0000\u00b3\u00b4\u0005{\u0000"+
		"\u0000\u00b4@\u0001\u0000\u0000\u0000\u00b5\u00b6\u0005}\u0000\u0000\u00b6"+
		"B\u0001\u0000\u0000\u0000\u00b7\u00b8\u0005[\u0000\u0000\u00b8D\u0001"+
		"\u0000\u0000\u0000\u00b9\u00ba\u0005]\u0000\u0000\u00baF\u0001\u0000\u0000"+
		"\u0000\u00bb\u00bf\u0007\u0000\u0000\u0000\u00bc\u00be\u0007\u0001\u0000"+
		"\u0000\u00bd\u00bc\u0001\u0000\u0000\u0000\u00be\u00c1\u0001\u0000\u0000"+
		"\u0000\u00bf\u00bd\u0001\u0000\u0000\u0000\u00bf\u00c0\u0001\u0000\u0000"+
		"\u0000\u00c0H\u0001\u0000\u0000\u0000\u00c1\u00bf\u0001\u0000\u0000\u0000"+
		"\u00c2\u00cb\u00050\u0000\u0000\u00c3\u00c7\u0007\u0002\u0000\u0000\u00c4"+
		"\u00c6\u0007\u0003\u0000\u0000\u00c5\u00c4\u0001\u0000\u0000\u0000\u00c6"+
		"\u00c9\u0001\u0000\u0000\u0000\u00c7\u00c5\u0001\u0000\u0000\u0000\u00c7"+
		"\u00c8\u0001\u0000\u0000\u0000\u00c8\u00cb\u0001\u0000\u0000\u0000\u00c9"+
		"\u00c7\u0001\u0000\u0000\u0000\u00ca\u00c2\u0001\u0000\u0000\u0000\u00ca"+
		"\u00c3\u0001\u0000\u0000\u0000\u00cbJ\u0001\u0000\u0000\u0000\u00cc\u00cf"+
		"\u0005\'\u0000\u0000\u00cd\u00d0\u0003M&\u0000\u00ce\u00d0\b\u0004\u0000"+
		"\u0000\u00cf\u00cd\u0001\u0000\u0000\u0000\u00cf\u00ce\u0001\u0000\u0000"+
		"\u0000\u00d0\u00d1\u0001\u0000\u0000\u0000\u00d1\u00d2\u0005\'\u0000\u0000"+
		"\u00d2L\u0001\u0000\u0000\u0000\u00d3\u00d4\u0005\\\u0000\u0000\u00d4"+
		"\u00d5\u0007\u0005\u0000\u0000\u00d5N\u0001\u0000\u0000\u0000\u00d6\u00d8"+
		"\u0007\u0006\u0000\u0000\u00d7\u00d6\u0001\u0000\u0000\u0000\u00d8\u00d9"+
		"\u0001\u0000\u0000\u0000\u00d9\u00d7\u0001\u0000\u0000\u0000\u00d9\u00da"+
		"\u0001\u0000\u0000\u0000\u00da\u00db\u0001\u0000\u0000\u0000\u00db\u00dc"+
		"\u0006\'\u0000\u0000\u00dcP\u0001\u0000\u0000\u0000\u00dd\u00de\u0005"+
		"/\u0000\u0000\u00de\u00df\u0005/\u0000\u0000\u00df\u00e3\u0001\u0000\u0000"+
		"\u0000\u00e0\u00e2\t\u0000\u0000\u0000\u00e1\u00e0\u0001\u0000\u0000\u0000"+
		"\u00e2\u00e5\u0001\u0000\u0000\u0000\u00e3\u00e4\u0001\u0000\u0000\u0000"+
		"\u00e3\u00e1\u0001\u0000\u0000\u0000\u00e4\u00eb\u0001\u0000\u0000\u0000"+
		"\u00e5\u00e3\u0001\u0000\u0000\u0000\u00e6\u00e8\u0005\r\u0000\u0000\u00e7"+
		"\u00e6\u0001\u0000\u0000\u0000\u00e7\u00e8\u0001\u0000\u0000\u0000\u00e8"+
		"\u00e9\u0001\u0000\u0000\u0000\u00e9\u00ec\u0005\n\u0000\u0000\u00ea\u00ec"+
		"\u0005\u0000\u0000\u0001\u00eb\u00e7\u0001\u0000\u0000\u0000\u00eb\u00ea"+
		"\u0001\u0000\u0000\u0000\u00ec\u00ed\u0001\u0000\u0000\u0000\u00ed\u00ee"+
		"\u0006(\u0000\u0000\u00eeR\u0001\u0000\u0000\u0000\u00ef\u00f0\u0005/"+
		"\u0000\u0000\u00f0\u00f1\u0005*\u0000\u0000\u00f1\u00f5\u0001\u0000\u0000"+
		"\u0000\u00f2\u00f4\t\u0000\u0000\u0000\u00f3\u00f2\u0001\u0000\u0000\u0000"+
		"\u00f4\u00f7\u0001\u0000\u0000\u0000\u00f5\u00f6\u0001\u0000\u0000\u0000"+
		"\u00f5\u00f3\u0001\u0000\u0000\u0000\u00f6\u00f8\u0001\u0000\u0000\u0000"+
		"\u00f7\u00f5\u0001\u0000\u0000\u0000\u00f8\u00f9\u0005*\u0000\u0000\u00f9"+
		"\u00fa\u0005/\u0000\u0000\u00fa\u00fb\u0001\u0000\u0000\u0000\u00fb\u00fc"+
		"\u0006)\u0000\u0000\u00fcT\u0001\u0000\u0000\u0000\n\u0000\u00bf\u00c7"+
		"\u00ca\u00cf\u00d9\u00e3\u00e7\u00eb\u00f5\u0001\u0006\u0000\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}